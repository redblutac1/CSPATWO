plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}

group 'com.example.cs5132_patwo'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    cdkVersion = '2.8'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.cs5132_patwo'
    mainClass = 'com.example.cs5132_patwo.HelloApplication'
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation "org.openscience.cdk:cdk-core:$cdkVersion"
    implementation "org.openscience.cdk:cdk-io:$cdkVersion"
    implementation "org.openscience.cdk:cdk-standard:$cdkVersion"
    implementation "org.openscience.cdk:cdk-silent:$cdkVersion"
    implementation "org.openscience.cdk:cdk-formula:$cdkVersion"
    implementation "org.openscience.cdk:cdk-sdg:$cdkVersion"
    implementation "org.openscience.cdk:cdk-renderbasic:$cdkVersion"
    implementation "org.openscience.cdk:cdk-renderawt:$cdkVersion"
    implementation "org.openscience.cdk:cdk-data:$cdkVersion"
    implementation "org.openscience.cdk:cdk-interfaces:$cdkVersion"
    implementation "org.openscience.cdk:cdk-smiles:$cdkVersion"
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    implementation group: 'org.openscience.cdk', name: 'cdk-bundle', version: '2.7.1'
    implementation 'org.json:json:20220924'

    constraints {
        implementation("org.apache.logging.log4j:log4j-core") {
            version {
                strictly("[2.17, 3[")
                prefer("2.17.1")
            }
            because("CVE-2021-44228, CVE-2021-45046, CVE-2021-45105: Log4j vulnerable to remote code execution and other critical security vulnerabilities")
        }
    }
}
test {
    useJUnitPlatform()
}

javafx {
    version = "19"
    modules = ["javafx.controls",
               "javafx.swing",
               "javafx.fxml",
               "javafx.web",
               "javafx.graphics"]
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}